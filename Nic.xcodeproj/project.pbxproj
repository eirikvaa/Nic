// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Nic::NicPackageTests::ProductTarget" /* NicPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_193 /* Build configuration list for PBXAggregateTarget "NicPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_196 /* PBXTargetDependency */,
			);
			name = NicPackageTests;
			productName = NicPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		E5714B492250C0720057F751 /* CommandLineParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* CommandLineParser.swift */; };
		E5714B4A2250C0720057F751 /* NicParserError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* NicParserError.swift */; };
		E5714B4B2250C0720057F751 /* NicScannerError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* NicScannerError.swift */; };
		E5714B4C2250C0720057F751 /* Expr.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Expr.swift */; };
		E5714B4D2250C0720057F751 /* IRGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* IRGenerator.swift */; };
		E5714B4E2250C0720057F751 /* Parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Parser.swift */; };
		E5714B4F2250C0720057F751 /* Resolver.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Resolver.swift */; };
		E5714B502250C0720057F751 /* Scanner.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Scanner.swift */; };
		E5714B512250C0720057F751 /* Stmt.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Stmt.swift */; };
		E5714B522250C0720057F751 /* Token.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Token.swift */; };
		E5714B532250C0720057F751 /* TokenType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* TokenType.swift */; };
		E5714B542250C0720057F751 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* main.swift */; };
		OBJ_103 /* Alias.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* Alias.swift */; };
		OBJ_104 /* Arbitrary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* Arbitrary.swift */; };
		OBJ_105 /* ArrayType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* ArrayType.swift */; };
		OBJ_106 /* AttachedMetadata.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* AttachedMetadata.swift */; };
		OBJ_107 /* BasicBlock.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* BasicBlock.swift */; };
		OBJ_108 /* Call.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* Call.swift */; };
		OBJ_109 /* CallingConvention.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* CallingConvention.swift */; };
		OBJ_110 /* Clause.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* Clause.swift */; };
		OBJ_111 /* Comdat.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* Comdat.swift */; };
		OBJ_112 /* Constant.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* Constant.swift */; };
		OBJ_113 /* DIBuilder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* DIBuilder.swift */; };
		OBJ_114 /* DWARFExpression.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* DWARFExpression.swift */; };
		OBJ_115 /* FloatType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* FloatType.swift */; };
		OBJ_116 /* Function+Attributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* Function+Attributes.swift */; };
		OBJ_117 /* Function.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* Function.swift */; };
		OBJ_118 /* FunctionType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* FunctionType.swift */; };
		OBJ_119 /* Global.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* Global.swift */; };
		OBJ_120 /* IRBuilder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* IRBuilder.swift */; };
		OBJ_121 /* IRGlobal.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_50 /* IRGlobal.swift */; };
		OBJ_122 /* IRMetadata.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* IRMetadata.swift */; };
		OBJ_123 /* IRType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* IRType.swift */; };
		OBJ_124 /* IRValue+Kinds.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* IRValue+Kinds.swift */; };
		OBJ_125 /* IRValue.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* IRValue.swift */; };
		OBJ_126 /* Initialization.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* Initialization.swift */; };
		OBJ_127 /* Instruction.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_56 /* Instruction.swift */; };
		OBJ_128 /* IntType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_57 /* IntType.swift */; };
		OBJ_129 /* Intrinsic.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_58 /* Intrinsic.swift */; };
		OBJ_130 /* JIT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_59 /* JIT.swift */; };
		OBJ_131 /* LabelType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* LabelType.swift */; };
		OBJ_132 /* Linkage.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* Linkage.swift */; };
		OBJ_133 /* MemoryBuffer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* MemoryBuffer.swift */; };
		OBJ_134 /* MetadataAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_63 /* MetadataAttributes.swift */; };
		OBJ_135 /* MetadataType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* MetadataType.swift */; };
		OBJ_136 /* Module.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* Module.swift */; };
		OBJ_137 /* NamedMetadata.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_66 /* NamedMetadata.swift */; };
		OBJ_138 /* ObjectFile.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_67 /* ObjectFile.swift */; };
		OBJ_139 /* OpCode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_68 /* OpCode.swift */; };
		OBJ_140 /* Operation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_69 /* Operation.swift */; };
		OBJ_141 /* PassManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_70 /* PassManager.swift */; };
		OBJ_142 /* PhiNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_71 /* PhiNode.swift */; };
		OBJ_143 /* PointerType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_72 /* PointerType.swift */; };
		OBJ_144 /* StructType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_73 /* StructType.swift */; };
		OBJ_145 /* Switch.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_74 /* Switch.swift */; };
		OBJ_146 /* TargetData.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_75 /* TargetData.swift */; };
		OBJ_147 /* TargetMachine.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_76 /* TargetMachine.swift */; };
		OBJ_148 /* TokenType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* TokenType.swift */; };
		OBJ_149 /* Units.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_78 /* Units.swift */; };
		OBJ_150 /* Use.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_79 /* Use.swift */; };
		OBJ_151 /* VectorType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_80 /* VectorType.swift */; };
		OBJ_152 /* VoidType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_81 /* VoidType.swift */; };
		OBJ_153 /* X86MMXType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_82 /* X86MMXType.swift */; };
		OBJ_155 /* llvmshims.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::llvmshims::Product" /* llvmshims.framework */; };
		OBJ_163 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_90 /* Package.swift */; };
		OBJ_169 /* CommandLineParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* CommandLineParser.swift */; };
		OBJ_170 /* NicParserError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* NicParserError.swift */; };
		OBJ_171 /* NicScannerError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* NicScannerError.swift */; };
		OBJ_172 /* Expr.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Expr.swift */; };
		OBJ_173 /* IRGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* IRGenerator.swift */; };
		OBJ_174 /* Parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Parser.swift */; };
		OBJ_175 /* Resolver.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Resolver.swift */; };
		OBJ_176 /* Scanner.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Scanner.swift */; };
		OBJ_177 /* Stmt.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Stmt.swift */; };
		OBJ_178 /* Token.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Token.swift */; };
		OBJ_179 /* TokenType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* TokenType.swift */; };
		OBJ_180 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* main.swift */; };
		OBJ_182 /* LLVM.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::LLVM::Product" /* LLVM.framework */; };
		OBJ_183 /* llvmshims.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::llvmshims::Product" /* llvmshims.framework */; };
		OBJ_191 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_202 /* NicParserTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* NicParserTests.swift */; };
		OBJ_203 /* NicScannerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* NicScannerTests.swift */; };
		OBJ_205 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* XCTestManifests.swift */; };
		OBJ_207 /* LLVM.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::LLVM::Product" /* LLVM.framework */; };
		OBJ_208 /* llvmshims.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LLVM::llvmshims::Product" /* llvmshims.framework */; };
		OBJ_216 /* shim.cpp in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_86 /* shim.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		E55C030B2250BDA500E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::LLVM";
			remoteInfo = LLVM;
		};
		E55C030C2250BDA500E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::llvmshims";
			remoteInfo = llvmshims;
		};
		E55C030D2250BDA500E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::llvmshims";
			remoteInfo = llvmshims;
		};
		E55C030E2250BDA500E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Nic::Nic";
			remoteInfo = Nic;
		};
		E55C030F2250BDA500E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::LLVM";
			remoteInfo = LLVM;
		};
		E55C03102250BDA500E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LLVM::llvmshims";
			remoteInfo = llvmshims;
		};
		E55C03112250BDA700E6D176 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Nic::NicTests";
			remoteInfo = NicTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		E55C03132250BFB500E6D176 /* grammar.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = net.daringfireball.markdown; name = grammar.md; path = Notes/grammar.md; sourceTree = SOURCE_ROOT; };
		"LLVM::LLVM::Product" /* LLVM.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = LLVM.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"LLVM::llvmshims::Product" /* llvmshims.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = llvmshims.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Nic::Nic::Product" /* Nic */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Nic; sourceTree = BUILT_PRODUCTS_DIR; };
		"Nic::NicTests::Product" /* NicTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = NicTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* CommandLineParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CommandLineParser.swift; sourceTree = "<group>"; };
		OBJ_12 /* NicParserError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NicParserError.swift; sourceTree = "<group>"; };
		OBJ_13 /* NicScannerError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NicScannerError.swift; sourceTree = "<group>"; };
		OBJ_14 /* Expr.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expr.swift; sourceTree = "<group>"; };
		OBJ_15 /* IRGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRGenerator.swift; sourceTree = "<group>"; };
		OBJ_16 /* Parser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Parser.swift; sourceTree = "<group>"; };
		OBJ_17 /* Resolver.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Resolver.swift; sourceTree = "<group>"; };
		OBJ_18 /* Scanner.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Scanner.swift; sourceTree = "<group>"; };
		OBJ_19 /* Stmt.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stmt.swift; sourceTree = "<group>"; };
		OBJ_20 /* Token.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Token.swift; sourceTree = "<group>"; };
		OBJ_21 /* TokenType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TokenType.swift; sourceTree = "<group>"; };
		OBJ_22 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		OBJ_25 /* NicParserTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NicParserTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* NicScannerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NicScannerTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_32 /* Alias.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Alias.swift; sourceTree = "<group>"; };
		OBJ_33 /* Arbitrary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Arbitrary.swift; sourceTree = "<group>"; };
		OBJ_34 /* ArrayType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArrayType.swift; sourceTree = "<group>"; };
		OBJ_35 /* AttachedMetadata.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AttachedMetadata.swift; sourceTree = "<group>"; };
		OBJ_36 /* BasicBlock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BasicBlock.swift; sourceTree = "<group>"; };
		OBJ_37 /* Call.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Call.swift; sourceTree = "<group>"; };
		OBJ_38 /* CallingConvention.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallingConvention.swift; sourceTree = "<group>"; };
		OBJ_39 /* Clause.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Clause.swift; sourceTree = "<group>"; };
		OBJ_40 /* Comdat.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Comdat.swift; sourceTree = "<group>"; };
		OBJ_41 /* Constant.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Constant.swift; sourceTree = "<group>"; };
		OBJ_42 /* DIBuilder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DIBuilder.swift; sourceTree = "<group>"; };
		OBJ_43 /* DWARFExpression.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DWARFExpression.swift; sourceTree = "<group>"; };
		OBJ_44 /* FloatType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FloatType.swift; sourceTree = "<group>"; };
		OBJ_45 /* Function+Attributes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Function+Attributes.swift"; sourceTree = "<group>"; };
		OBJ_46 /* Function.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Function.swift; sourceTree = "<group>"; };
		OBJ_47 /* FunctionType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FunctionType.swift; sourceTree = "<group>"; };
		OBJ_48 /* Global.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Global.swift; sourceTree = "<group>"; };
		OBJ_49 /* IRBuilder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRBuilder.swift; sourceTree = "<group>"; };
		OBJ_50 /* IRGlobal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRGlobal.swift; sourceTree = "<group>"; };
		OBJ_51 /* IRMetadata.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRMetadata.swift; sourceTree = "<group>"; };
		OBJ_52 /* IRType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRType.swift; sourceTree = "<group>"; };
		OBJ_53 /* IRValue+Kinds.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "IRValue+Kinds.swift"; sourceTree = "<group>"; };
		OBJ_54 /* IRValue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IRValue.swift; sourceTree = "<group>"; };
		OBJ_55 /* Initialization.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Initialization.swift; sourceTree = "<group>"; };
		OBJ_56 /* Instruction.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Instruction.swift; sourceTree = "<group>"; };
		OBJ_57 /* IntType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntType.swift; sourceTree = "<group>"; };
		OBJ_58 /* Intrinsic.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Intrinsic.swift; sourceTree = "<group>"; };
		OBJ_59 /* JIT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JIT.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* LabelType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LabelType.swift; sourceTree = "<group>"; };
		OBJ_61 /* Linkage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Linkage.swift; sourceTree = "<group>"; };
		OBJ_62 /* MemoryBuffer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MemoryBuffer.swift; sourceTree = "<group>"; };
		OBJ_63 /* MetadataAttributes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MetadataAttributes.swift; sourceTree = "<group>"; };
		OBJ_64 /* MetadataType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MetadataType.swift; sourceTree = "<group>"; };
		OBJ_65 /* Module.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Module.swift; sourceTree = "<group>"; };
		OBJ_66 /* NamedMetadata.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NamedMetadata.swift; sourceTree = "<group>"; };
		OBJ_67 /* ObjectFile.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectFile.swift; sourceTree = "<group>"; };
		OBJ_68 /* OpCode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OpCode.swift; sourceTree = "<group>"; };
		OBJ_69 /* Operation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Operation.swift; sourceTree = "<group>"; };
		OBJ_70 /* PassManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PassManager.swift; sourceTree = "<group>"; };
		OBJ_71 /* PhiNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PhiNode.swift; sourceTree = "<group>"; };
		OBJ_72 /* PointerType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PointerType.swift; sourceTree = "<group>"; };
		OBJ_73 /* StructType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StructType.swift; sourceTree = "<group>"; };
		OBJ_74 /* Switch.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Switch.swift; sourceTree = "<group>"; };
		OBJ_75 /* TargetData.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TargetData.swift; sourceTree = "<group>"; };
		OBJ_76 /* TargetMachine.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TargetMachine.swift; sourceTree = "<group>"; };
		OBJ_77 /* TokenType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TokenType.swift; sourceTree = "<group>"; };
		OBJ_78 /* Units.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Units.swift; sourceTree = "<group>"; };
		OBJ_79 /* Use.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Use.swift; sourceTree = "<group>"; };
		OBJ_80 /* VectorType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VectorType.swift; sourceTree = "<group>"; };
		OBJ_81 /* VoidType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VoidType.swift; sourceTree = "<group>"; };
		OBJ_82 /* X86MMXType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = X86MMXType.swift; sourceTree = "<group>"; };
		OBJ_86 /* shim.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = shim.cpp; sourceTree = "<group>"; };
		OBJ_88 /* shim.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = shim.h; sourceTree = "<group>"; };
		OBJ_89 /* module.modulemap */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.module-map"; name = module.modulemap; path = /Users/eirik/Documents/Utvikling/macOS/Nic/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap; sourceTree = "<group>"; };
		OBJ_9 /* test.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = test.txt; sourceTree = "<group>"; };
		OBJ_90 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = /Users/eirik/Documents/Utvikling/macOS/Nic/.build/checkouts/LLVMSwift/Package.swift; sourceTree = "<group>"; };
		OBJ_97 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_154 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_155 /* llvmshims.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_181 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_182 /* LLVM.framework in Frameworks */,
				OBJ_183 /* llvmshims.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_206 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_207 /* LLVM.framework in Frameworks */,
				OBJ_208 /* llvmshims.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_217 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		E55C03122250BF9200E6D176 /* Notes */ = {
			isa = PBXGroup;
			children = (
				E55C03132250BFB500E6D176 /* grammar.md */,
			);
			path = Notes;
			sourceTree = "<group>";
		};
		OBJ_11 /* Error */ = {
			isa = PBXGroup;
			children = (
				OBJ_12 /* NicParserError.swift */,
				OBJ_13 /* NicScannerError.swift */,
			);
			path = Error;
			sourceTree = "<group>";
		};
		OBJ_23 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* NicTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_24 /* NicTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* NicParserTests.swift */,
				OBJ_26 /* NicScannerTests.swift */,
				OBJ_28 /* XCTestManifests.swift */,
			);
			name = NicTests;
			path = Tests/NicTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_29 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_30 /* LLVM 0.5.0 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_30 /* LLVM 0.5.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_31 /* LLVM */,
				OBJ_83 /* cllvm */,
				OBJ_84 /* llvmshims */,
				OBJ_90 /* Package.swift */,
			);
			name = "LLVM 0.5.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_31 /* LLVM */ = {
			isa = PBXGroup;
			children = (
				OBJ_32 /* Alias.swift */,
				OBJ_33 /* Arbitrary.swift */,
				OBJ_34 /* ArrayType.swift */,
				OBJ_35 /* AttachedMetadata.swift */,
				OBJ_36 /* BasicBlock.swift */,
				OBJ_37 /* Call.swift */,
				OBJ_38 /* CallingConvention.swift */,
				OBJ_39 /* Clause.swift */,
				OBJ_40 /* Comdat.swift */,
				OBJ_41 /* Constant.swift */,
				OBJ_42 /* DIBuilder.swift */,
				OBJ_43 /* DWARFExpression.swift */,
				OBJ_44 /* FloatType.swift */,
				OBJ_45 /* Function+Attributes.swift */,
				OBJ_46 /* Function.swift */,
				OBJ_47 /* FunctionType.swift */,
				OBJ_48 /* Global.swift */,
				OBJ_49 /* IRBuilder.swift */,
				OBJ_50 /* IRGlobal.swift */,
				OBJ_51 /* IRMetadata.swift */,
				OBJ_52 /* IRType.swift */,
				OBJ_53 /* IRValue+Kinds.swift */,
				OBJ_54 /* IRValue.swift */,
				OBJ_55 /* Initialization.swift */,
				OBJ_56 /* Instruction.swift */,
				OBJ_57 /* IntType.swift */,
				OBJ_58 /* Intrinsic.swift */,
				OBJ_59 /* JIT.swift */,
				OBJ_60 /* LabelType.swift */,
				OBJ_61 /* Linkage.swift */,
				OBJ_62 /* MemoryBuffer.swift */,
				OBJ_63 /* MetadataAttributes.swift */,
				OBJ_64 /* MetadataType.swift */,
				OBJ_65 /* Module.swift */,
				OBJ_66 /* NamedMetadata.swift */,
				OBJ_67 /* ObjectFile.swift */,
				OBJ_68 /* OpCode.swift */,
				OBJ_69 /* Operation.swift */,
				OBJ_70 /* PassManager.swift */,
				OBJ_71 /* PhiNode.swift */,
				OBJ_72 /* PointerType.swift */,
				OBJ_73 /* StructType.swift */,
				OBJ_74 /* Switch.swift */,
				OBJ_75 /* TargetData.swift */,
				OBJ_76 /* TargetMachine.swift */,
				OBJ_77 /* TokenType.swift */,
				OBJ_78 /* Units.swift */,
				OBJ_79 /* Use.swift */,
				OBJ_80 /* VectorType.swift */,
				OBJ_81 /* VoidType.swift */,
				OBJ_82 /* X86MMXType.swift */,
			);
			name = LLVM;
			path = .build/checkouts/LLVMSwift/Sources/LLVM;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_23 /* Tests */,
				E55C03122250BF9200E6D176 /* Notes */,
				OBJ_29 /* Dependencies */,
				OBJ_91 /* Products */,
				OBJ_97 /* README.md */,
			);
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Nic */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Nic */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* test.txt */,
				OBJ_10 /* CommandLineParser.swift */,
				OBJ_11 /* Error */,
				OBJ_14 /* Expr.swift */,
				OBJ_15 /* IRGenerator.swift */,
				OBJ_16 /* Parser.swift */,
				OBJ_17 /* Resolver.swift */,
				OBJ_18 /* Scanner.swift */,
				OBJ_19 /* Stmt.swift */,
				OBJ_20 /* Token.swift */,
				OBJ_21 /* TokenType.swift */,
				OBJ_22 /* main.swift */,
			);
			name = Nic;
			path = Sources/Nic;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_83 /* cllvm */ = {
			isa = PBXGroup;
			children = (
			);
			name = cllvm;
			path = .build/checkouts/LLVMSwift/Sources/cllvm;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_84 /* llvmshims */ = {
			isa = PBXGroup;
			children = (
				OBJ_85 /* src */,
				OBJ_87 /* include */,
			);
			name = llvmshims;
			path = .build/checkouts/LLVMSwift/Sources/llvmshims;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_85 /* src */ = {
			isa = PBXGroup;
			children = (
				OBJ_86 /* shim.cpp */,
			);
			path = src;
			sourceTree = "<group>";
		};
		OBJ_87 /* include */ = {
			isa = PBXGroup;
			children = (
				OBJ_88 /* shim.h */,
				OBJ_89 /* module.modulemap */,
			);
			path = include;
			sourceTree = "<group>";
		};
		OBJ_91 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Nic::Nic::Product" /* Nic */,
				"Nic::NicTests::Product" /* NicTests.xctest */,
				"LLVM::llvmshims::Product" /* llvmshims.framework */,
				"LLVM::LLVM::Product" /* LLVM.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"LLVM::LLVM" /* LLVM */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_99 /* Build configuration list for PBXNativeTarget "LLVM" */;
			buildPhases = (
				OBJ_102 /* Sources */,
				OBJ_154 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_156 /* PBXTargetDependency */,
			);
			name = LLVM;
			productName = LLVM;
			productReference = "LLVM::LLVM::Product" /* LLVM.framework */;
			productType = "com.apple.product-type.framework";
		};
		"LLVM::SwiftPMPackageDescription" /* LLVMPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_159 /* Build configuration list for PBXNativeTarget "LLVMPackageDescription" */;
			buildPhases = (
				OBJ_162 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LLVMPackageDescription;
			productName = LLVMPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"LLVM::llvmshims" /* llvmshims */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_212 /* Build configuration list for PBXNativeTarget "llvmshims" */;
			buildPhases = (
				OBJ_215 /* Sources */,
				OBJ_217 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = llvmshims;
			productName = llvmshims;
			productReference = "LLVM::llvmshims::Product" /* llvmshims.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Nic::Nic" /* Nic */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_165 /* Build configuration list for PBXNativeTarget "Nic" */;
			buildPhases = (
				OBJ_168 /* Sources */,
				OBJ_181 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_184 /* PBXTargetDependency */,
				OBJ_185 /* PBXTargetDependency */,
			);
			name = Nic;
			productName = Nic;
			productReference = "Nic::Nic::Product" /* Nic */;
			productType = "com.apple.product-type.tool";
		};
		"Nic::NicTests" /* NicTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_198 /* Build configuration list for PBXNativeTarget "NicTests" */;
			buildPhases = (
				OBJ_201 /* Sources */,
				OBJ_206 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_209 /* PBXTargetDependency */,
				OBJ_210 /* PBXTargetDependency */,
				OBJ_211 /* PBXTargetDependency */,
			);
			name = NicTests;
			productName = NicTests;
			productReference = "Nic::NicTests::Product" /* NicTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Nic::SwiftPMPackageDescription" /* NicPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_187 /* Build configuration list for PBXNativeTarget "NicPackageDescription" */;
			buildPhases = (
				OBJ_190 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = NicPackageDescription;
			productName = NicPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Nic" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = OBJ_5;
			productRefGroup = OBJ_91 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"LLVM::LLVM" /* LLVM */,
				"LLVM::SwiftPMPackageDescription" /* LLVMPackageDescription */,
				"Nic::Nic" /* Nic */,
				"Nic::SwiftPMPackageDescription" /* NicPackageDescription */,
				"Nic::NicPackageTests::ProductTarget" /* NicPackageTests */,
				"Nic::NicTests" /* NicTests */,
				"LLVM::llvmshims" /* llvmshims */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_102 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_103 /* Alias.swift in Sources */,
				OBJ_104 /* Arbitrary.swift in Sources */,
				OBJ_105 /* ArrayType.swift in Sources */,
				OBJ_106 /* AttachedMetadata.swift in Sources */,
				OBJ_107 /* BasicBlock.swift in Sources */,
				OBJ_108 /* Call.swift in Sources */,
				OBJ_109 /* CallingConvention.swift in Sources */,
				OBJ_110 /* Clause.swift in Sources */,
				OBJ_111 /* Comdat.swift in Sources */,
				OBJ_112 /* Constant.swift in Sources */,
				OBJ_113 /* DIBuilder.swift in Sources */,
				OBJ_114 /* DWARFExpression.swift in Sources */,
				OBJ_115 /* FloatType.swift in Sources */,
				OBJ_116 /* Function+Attributes.swift in Sources */,
				OBJ_117 /* Function.swift in Sources */,
				OBJ_118 /* FunctionType.swift in Sources */,
				OBJ_119 /* Global.swift in Sources */,
				OBJ_120 /* IRBuilder.swift in Sources */,
				OBJ_121 /* IRGlobal.swift in Sources */,
				OBJ_122 /* IRMetadata.swift in Sources */,
				OBJ_123 /* IRType.swift in Sources */,
				OBJ_124 /* IRValue+Kinds.swift in Sources */,
				OBJ_125 /* IRValue.swift in Sources */,
				OBJ_126 /* Initialization.swift in Sources */,
				OBJ_127 /* Instruction.swift in Sources */,
				OBJ_128 /* IntType.swift in Sources */,
				OBJ_129 /* Intrinsic.swift in Sources */,
				OBJ_130 /* JIT.swift in Sources */,
				OBJ_131 /* LabelType.swift in Sources */,
				OBJ_132 /* Linkage.swift in Sources */,
				OBJ_133 /* MemoryBuffer.swift in Sources */,
				OBJ_134 /* MetadataAttributes.swift in Sources */,
				OBJ_135 /* MetadataType.swift in Sources */,
				OBJ_136 /* Module.swift in Sources */,
				OBJ_137 /* NamedMetadata.swift in Sources */,
				OBJ_138 /* ObjectFile.swift in Sources */,
				OBJ_139 /* OpCode.swift in Sources */,
				OBJ_140 /* Operation.swift in Sources */,
				OBJ_141 /* PassManager.swift in Sources */,
				OBJ_142 /* PhiNode.swift in Sources */,
				OBJ_143 /* PointerType.swift in Sources */,
				OBJ_144 /* StructType.swift in Sources */,
				OBJ_145 /* Switch.swift in Sources */,
				OBJ_146 /* TargetData.swift in Sources */,
				OBJ_147 /* TargetMachine.swift in Sources */,
				OBJ_148 /* TokenType.swift in Sources */,
				OBJ_149 /* Units.swift in Sources */,
				OBJ_150 /* Use.swift in Sources */,
				OBJ_151 /* VectorType.swift in Sources */,
				OBJ_152 /* VoidType.swift in Sources */,
				OBJ_153 /* X86MMXType.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_162 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_163 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_168 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_169 /* CommandLineParser.swift in Sources */,
				OBJ_170 /* NicParserError.swift in Sources */,
				OBJ_171 /* NicScannerError.swift in Sources */,
				OBJ_172 /* Expr.swift in Sources */,
				OBJ_173 /* IRGenerator.swift in Sources */,
				OBJ_174 /* Parser.swift in Sources */,
				OBJ_175 /* Resolver.swift in Sources */,
				OBJ_176 /* Scanner.swift in Sources */,
				OBJ_177 /* Stmt.swift in Sources */,
				OBJ_178 /* Token.swift in Sources */,
				OBJ_179 /* TokenType.swift in Sources */,
				OBJ_180 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_190 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_191 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_201 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				E5714B502250C0720057F751 /* Scanner.swift in Sources */,
				OBJ_202 /* NicParserTests.swift in Sources */,
				OBJ_203 /* NicScannerTests.swift in Sources */,
				E5714B4B2250C0720057F751 /* NicScannerError.swift in Sources */,
				E5714B4C2250C0720057F751 /* Expr.swift in Sources */,
				E5714B512250C0720057F751 /* Stmt.swift in Sources */,
				E5714B4A2250C0720057F751 /* NicParserError.swift in Sources */,
				E5714B4F2250C0720057F751 /* Resolver.swift in Sources */,
				E5714B4E2250C0720057F751 /* Parser.swift in Sources */,
				E5714B532250C0720057F751 /* TokenType.swift in Sources */,
				E5714B492250C0720057F751 /* CommandLineParser.swift in Sources */,
				E5714B542250C0720057F751 /* main.swift in Sources */,
				E5714B4D2250C0720057F751 /* IRGenerator.swift in Sources */,
				E5714B522250C0720057F751 /* Token.swift in Sources */,
				OBJ_205 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_215 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_216 /* shim.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_156 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::llvmshims" /* llvmshims */;
			targetProxy = E55C030C2250BDA500E6D176 /* PBXContainerItemProxy */;
		};
		OBJ_184 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::LLVM" /* LLVM */;
			targetProxy = E55C030B2250BDA500E6D176 /* PBXContainerItemProxy */;
		};
		OBJ_185 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::llvmshims" /* llvmshims */;
			targetProxy = E55C030D2250BDA500E6D176 /* PBXContainerItemProxy */;
		};
		OBJ_196 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Nic::NicTests" /* NicTests */;
			targetProxy = E55C03112250BDA700E6D176 /* PBXContainerItemProxy */;
		};
		OBJ_209 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Nic::Nic" /* Nic */;
			targetProxy = E55C030E2250BDA500E6D176 /* PBXContainerItemProxy */;
		};
		OBJ_210 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::LLVM" /* LLVM */;
			targetProxy = E55C030F2250BDA500E6D176 /* PBXContainerItemProxy */;
		};
		OBJ_211 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LLVM::llvmshims" /* llvmshims */;
			targetProxy = E55C03102250BDA500E6D176 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_100 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
					"$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims",
				);
				INFOPLIST_FILE = Nic.xcodeproj/LLVM_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include -Xcc -fmodule-map-file=$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = LLVM;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = LLVM;
			};
			name = Debug;
		};
		OBJ_101 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
					"$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims",
				);
				INFOPLIST_FILE = Nic.xcodeproj/LLVM_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include -Xcc -fmodule-map-file=$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = LLVM;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = LLVM;
			};
			name = Release;
		};
		OBJ_160 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4.2 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.2;
			};
			name = Debug;
		};
		OBJ_161 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4.2 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.2;
			};
			name = Release;
		};
		OBJ_166 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
					"$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims",
				);
				INFOPLIST_FILE = Nic.xcodeproj/Nic_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include -Xcc -fmodule-map-file=$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Nic;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_167 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
					"$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims",
				);
				INFOPLIST_FILE = Nic.xcodeproj/Nic_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include -Xcc -fmodule-map-file=$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Nic;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_188 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_189 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_194 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_195 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_199 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
					"$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims",
				);
				INFOPLIST_FILE = Nic.xcodeproj/NicTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include -Xcc -fmodule-map-file=$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = NicTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_200 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
					"$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims",
				);
				INFOPLIST_FILE = Nic.xcodeproj/NicTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include -Xcc -fmodule-map-file=$(SRCROOT)/Nic.xcodeproj/GeneratedModuleMap/llvmshims/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = NicTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_213 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
				);
				INFOPLIST_FILE = Nic.xcodeproj/llvmshims_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include";
				PRODUCT_BUNDLE_IDENTIFIER = llvmshims;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = llvmshims;
			};
			name = Debug;
		};
		OBJ_214 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/llvmshims/include",
					"$(SRCROOT)/.build/checkouts/LLVMSwift/Sources/cllvm",
				);
				INFOPLIST_FILE = Nic.xcodeproj/llvmshims_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = (
					"$(inherited)",
					"-I/usr/local/Cellar/llvm/8.0.0/include",
				);
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/llvm/8.0.0/lib",
					"-lLLVMLTO",
					"-lLLVMPasses",
					"-lLLVMObjCARCOpts",
					"-lLLVMMIRParser",
					"-lLLVMSymbolize",
					"-lLLVMDebugInfoPDB",
					"-lLLVMDebugInfoDWARF",
					"-lLLVMCoverage",
					"-lLLVMMCA",
					"-lLLVMTableGen",
					"-lLLVMDlltoolDriver",
					"-lLLVMXRay",
					"-lLLVMOrcJIT",
					"-lLLVMXCoreDisassembler",
					"-lLLVMXCoreCodeGen",
					"-lLLVMXCoreDesc",
					"-lLLVMXCoreInfo",
					"-lLLVMXCoreAsmPrinter",
					"-lLLVMWebAssemblyDisassembler",
					"-lLLVMWebAssemblyCodeGen",
					"-lLLVMWebAssemblyDesc",
					"-lLLVMWebAssemblyAsmPrinter",
					"-lLLVMWebAssemblyAsmParser",
					"-lLLVMWebAssemblyInfo",
					"-lLLVMSystemZDisassembler",
					"-lLLVMSystemZCodeGen",
					"-lLLVMSystemZAsmParser",
					"-lLLVMSystemZDesc",
					"-lLLVMSystemZInfo",
					"-lLLVMSystemZAsmPrinter",
					"-lLLVMSparcDisassembler",
					"-lLLVMSparcCodeGen",
					"-lLLVMSparcAsmParser",
					"-lLLVMSparcDesc",
					"-lLLVMSparcInfo",
					"-lLLVMSparcAsmPrinter",
					"-lLLVMPowerPCDisassembler",
					"-lLLVMPowerPCCodeGen",
					"-lLLVMPowerPCAsmParser",
					"-lLLVMPowerPCDesc",
					"-lLLVMPowerPCInfo",
					"-lLLVMPowerPCAsmPrinter",
					"-lLLVMNVPTXCodeGen",
					"-lLLVMNVPTXDesc",
					"-lLLVMNVPTXInfo",
					"-lLLVMNVPTXAsmPrinter",
					"-lLLVMMSP430Disassembler",
					"-lLLVMMSP430CodeGen",
					"-lLLVMMSP430AsmParser",
					"-lLLVMMSP430Desc",
					"-lLLVMMSP430Info",
					"-lLLVMMSP430AsmPrinter",
					"-lLLVMMipsDisassembler",
					"-lLLVMMipsCodeGen",
					"-lLLVMMipsAsmParser",
					"-lLLVMMipsDesc",
					"-lLLVMMipsInfo",
					"-lLLVMMipsAsmPrinter",
					"-lLLVMLanaiDisassembler",
					"-lLLVMLanaiCodeGen",
					"-lLLVMLanaiAsmParser",
					"-lLLVMLanaiDesc",
					"-lLLVMLanaiAsmPrinter",
					"-lLLVMLanaiInfo",
					"-lLLVMHexagonDisassembler",
					"-lLLVMHexagonCodeGen",
					"-lLLVMHexagonAsmParser",
					"-lLLVMHexagonDesc",
					"-lLLVMHexagonInfo",
					"-lLLVMBPFDisassembler",
					"-lLLVMBPFCodeGen",
					"-lLLVMBPFAsmParser",
					"-lLLVMBPFDesc",
					"-lLLVMBPFInfo",
					"-lLLVMBPFAsmPrinter",
					"-lLLVMARMDisassembler",
					"-lLLVMARMCodeGen",
					"-lLLVMARMAsmParser",
					"-lLLVMARMDesc",
					"-lLLVMARMInfo",
					"-lLLVMARMAsmPrinter",
					"-lLLVMARMUtils",
					"-lLLVMAMDGPUDisassembler",
					"-lLLVMAMDGPUCodeGen",
					"-lLLVMAMDGPUAsmParser",
					"-lLLVMAMDGPUDesc",
					"-lLLVMAMDGPUInfo",
					"-lLLVMAMDGPUAsmPrinter",
					"-lLLVMAMDGPUUtils",
					"-lLLVMAArch64Disassembler",
					"-lLLVMAArch64CodeGen",
					"-lLLVMAArch64AsmParser",
					"-lLLVMAArch64Desc",
					"-lLLVMAArch64Info",
					"-lLLVMAArch64AsmPrinter",
					"-lLLVMAArch64Utils",
					"-lLLVMObjectYAML",
					"-lLLVMLibDriver",
					"-lLLVMOption",
					"-lLLVMOptRemarks",
					"-lLLVMWindowsManifest",
					"-lLLVMTextAPI",
					"-lLLVMFuzzMutate",
					"-lLLVMX86Disassembler",
					"-lLLVMX86AsmParser",
					"-lLLVMX86CodeGen",
					"-lLLVMGlobalISel",
					"-lLLVMSelectionDAG",
					"-lLLVMAsmPrinter",
					"-lLLVMX86Desc",
					"-lLLVMMCDisassembler",
					"-lLLVMX86Info",
					"-lLLVMX86AsmPrinter",
					"-lLLVMX86Utils",
					"-lLLVMMCJIT",
					"-lLLVMLineEditor",
					"-lLLVMInterpreter",
					"-lLLVMExecutionEngine",
					"-lLLVMRuntimeDyld",
					"-lLLVMCodeGen",
					"-lLLVMTarget",
					"-lLLVMCoroutines",
					"-lLLVMipo",
					"-lLLVMInstrumentation",
					"-lLLVMVectorize",
					"-lLLVMScalarOpts",
					"-lLLVMLinker",
					"-lLLVMIRReader",
					"-lLLVMAsmParser",
					"-lLLVMInstCombine",
					"-lLLVMBitWriter",
					"-lLLVMAggressiveInstCombine",
					"-lLLVMTransformUtils",
					"-lLLVMAnalysis",
					"-lLLVMProfileData",
					"-lLLVMObject",
					"-lLLVMMCParser",
					"-lLLVMMC",
					"-lLLVMDebugInfoCodeView",
					"-lLLVMDebugInfoMSF",
					"-lLLVMBitReader",
					"-lLLVMCore",
					"-lLLVMBinaryFormat",
					"-lLLVMSupport",
					"-lLLVMDemangle",
					"-lz",
					"-lcurses",
					"-lm",
					"-lxml2",
					"-lc++",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/llvm/8.0.0/include";
				PRODUCT_BUNDLE_IDENTIFIER = llvmshims;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = llvmshims;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				ENABLE_TESTABILITY = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_TESTABILITY = YES;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_159 /* Build configuration list for PBXNativeTarget "LLVMPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_160 /* Debug */,
				OBJ_161 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_165 /* Build configuration list for PBXNativeTarget "Nic" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_166 /* Debug */,
				OBJ_167 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_187 /* Build configuration list for PBXNativeTarget "NicPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_188 /* Debug */,
				OBJ_189 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_193 /* Build configuration list for PBXAggregateTarget "NicPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_194 /* Debug */,
				OBJ_195 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_198 /* Build configuration list for PBXNativeTarget "NicTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_199 /* Debug */,
				OBJ_200 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_2 /* Build configuration list for PBXProject "Nic" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_212 /* Build configuration list for PBXNativeTarget "llvmshims" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_213 /* Debug */,
				OBJ_214 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_99 /* Build configuration list for PBXNativeTarget "LLVM" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_100 /* Debug */,
				OBJ_101 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
